apiVersion: apps/v1
kind: Deployment
metadata:
  name: java-app
spec:
  selector:
    matchLabels:
      run: java-app
  replicas: 2
  template:
    metadata:
      labels:
        run: java-app
    spec:
      containers:
      - name: java-app
        image: aleks9001/java_app:latest
        ports:
        - containerPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-03-01T13:24:25Z"
  finalizers:
  - service.kubernetes.io/load-balancer-cleanup
  name: my-service
  namespace: java-app
  resourceVersion: "3530271"
  uid: 878524c5-dfef-4c6e-bd64-35cc621c6f5b
spec:
  clusterIP: 10.39.243.78
  clusterIPs:
  - 10.39.243.78
  externalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - nodePort: 32542
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    run: java-app
  sessionAffinity: None
  type: LoadBalancer
status:
  loadBalancer:
    ingress:
    - ip: 35.198.136.180

---

apiVersion: v1
kind: Service
metadata:
  name: java-app
  labels:
    run: java-app
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    run: java-app

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt"
  name: my-ingress
spec:
  tls:
    - hosts:
        - ingress.devops.sportal365.dev
      secretName: ingress-tls
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: my-service
            port:
              number: 8080

---
